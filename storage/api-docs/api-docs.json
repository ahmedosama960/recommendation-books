{
    "openapi": "3.0.0",
    "info": {
        "title": "Book Reccomendation",
        "description": "Get All Reccomendation Books",
        "contact": {
            "email": "a.osamamahmoud96@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get all books",
                "description": "Retrieves a list of all books in the collection.",
                "operationId": "BooksList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter between deleted and active books [ 1 => All Active Books , 0 => All In Active Books , -1 => All Books ]",
                        "schema": {
                            "type": "integer",
                            "default": "1",
                            "enum": [
                                1,
                                0,
                                -1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of the rows per the page [ pagination ]",
                        "schema": {
                            "type": "integer",
                            "default": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "the desired page number [ pagination ]",
                        "schema": {
                            "type": "integer",
                            "default": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "A Brief History of Time"
                                            },
                                            "number_of_pages": {
                                                "type": "integer",
                                                "example": 256
                                            },
                                            "is_active": {
                                                "type": "boolean"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Add a new book",
                "description": "Adds a new book to the collection and returns the added book details.",
                "operationId": "storeBook",
                "requestBody": {
                    "description": "Pass book details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "number_of_pages"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "A Brief History of Time"
                                    },
                                    "number_of_pages": {
                                        "type": "integer",
                                        "example": 256
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Book successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "A Brief History of Time"
                                        },
                                        "number_of_pages": {
                                            "type": "integer",
                                            "example": 256
                                        },
                                        "is_active": {
                                            "type": "boolean"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have entered this title before"
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "You have entered this interval before"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/books/{id}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get a single book by ID",
                "description": "Retrieves the details of a single book given its ID.",
                "operationId": "getBookById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "A Brief History of Time"
                                        },
                                        "number_of_pages": {
                                            "type": "integer",
                                            "example": 256
                                        },
                                        "is_active": {
                                            "type": "boolean"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Update a single book's data",
                "description": "Updates the specified fields of a book given its ID.",
                "operationId": "updateBook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Book data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "number_of_pages"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Book Title"
                                    },
                                    "number_of_pages": {
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Book updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "type": "string",
                                            "example": "Updated Book Title"
                                        },
                                        "number_of_pages": {
                                            "type": "integer",
                                            "example": 123
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "422": {
                        "description": "Error: Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title has already been taken."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete a single book",
                "description": "Deletes a book from the collection given its ID.",
                "operationId": "deleteBook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Delete operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "A Brief History of Time"
                                        },
                                        "number_of_pages": {
                                            "type": "integer",
                                            "example": 256
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": 0
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            }
        },
        "/api/v1/books/restore/{id}": {
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Restore a single book",
                "description": "Restore a book from the collection given its ID.",
                "operationId": "restoreBook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to restore",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful restore operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "A Brief History of Time"
                                        },
                                        "number_of_pages": {
                                            "type": "integer",
                                            "example": 256
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            }
        },
        "/api/v1/books/recommendations/top-five": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get Top Five Recommendation books [ V1 Query Based ]",
                "description": "Retrieves a list of Top Five Recommendation books",
                "operationId": "topFiveBooks",
                "responses": {
                    "200": {
                        "description": "A List of Top Five Recommendation books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "book_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "book_name": {
                                                "type": "string",
                                                "example": "A Brief History of Time"
                                            },
                                            "num_of_read_pages": {
                                                "type": "integer",
                                                "example": 256
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error."
                    }
                }
            }
        },
        "/api/v1/books/recommendations/top-five/v2": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get Top Five Recommendation books [ V2 Code & loops Based ]",
                "description": "Retrieves a list of Top Five Recommendation books",
                "operationId": "topFiveBooksV2",
                "responses": {
                    "200": {
                        "description": "A List of Top Five Recommendation books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "book_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "book_name": {
                                                "type": "string",
                                                "example": "A Brief History of Time"
                                            },
                                            "num_of_read_pages": {
                                                "type": "integer",
                                                "example": 256
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error."
                    }
                }
            }
        },
        "/api/v1/intervals": {
            "get": {
                "tags": [
                    "Intervals"
                ],
                "summary": "Get all intervals",
                "description": "Retrieves all intervals of all inserted intervals by users",
                "operationId": "IntervalsList",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of the rows per the page [ pagination ]",
                        "schema": {
                            "type": "integer",
                            "default": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "the desired page number [ pagination ]",
                        "schema": {
                            "type": "integer",
                            "default": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of intervals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "user_name": {
                                                "type": "string",
                                                "example": "Ahmed Osama"
                                            },
                                            "book_name": {
                                                "type": "string",
                                                "example": "Harry poter"
                                            },
                                            "start_page": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "end_page": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Intervals"
                ],
                "summary": "Add a new interval",
                "description": "Adds a new interval to the collection and returns the added interval details.\n     *      [ Message will be sended after submit]",
                "operationId": "storeInterval",
                "requestBody": {
                    "description": "Pass interval details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "book_id",
                                    "start_page",
                                    "end_page"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "interger",
                                        "example": 10
                                    },
                                    "book_id": {
                                        "type": "interger",
                                        "example": 1
                                    },
                                    "start_page": {
                                        "type": "interger",
                                        "example": 1
                                    },
                                    "end_page": {
                                        "type": "interger",
                                        "example": 15
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Interval successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_id": {
                                            "type": "interger",
                                            "example": 10
                                        },
                                        "book_id": {
                                            "type": "interger",
                                            "example": 1
                                        },
                                        "start_page": {
                                            "type": "interger",
                                            "example": 1
                                        },
                                        "end_page": {
                                            "type": "interger",
                                            "example": 15
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have entered this interval before"
                                        },
                                        "errors": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "You have entered this interval before"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/intervals/{id}": {
            "get": {
                "tags": [
                    "Intervals"
                ],
                "summary": "Get a single Interval by ID",
                "description": "Retrieves the details of a single Interval given its ID.",
                "operationId": "getIntervalById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the inteval to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "book_id": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "start_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "end_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Intervals"
                ],
                "summary": "Update a single Intervals's data",
                "description": "Updates the specified fields of a interval given its ID.",
                "operationId": "updateInterval",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the interval to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass interval details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "book_id",
                                    "start_page",
                                    "end_page"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "interger",
                                        "example": 10
                                    },
                                    "book_id": {
                                        "type": "interger",
                                        "example": 1
                                    },
                                    "start_page": {
                                        "type": "interger",
                                        "example": 1
                                    },
                                    "end_page": {
                                        "type": "interger",
                                        "example": 15
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Interval successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_id": {
                                            "type": "interger",
                                            "example": 10
                                        },
                                        "book_id": {
                                            "type": "interger",
                                            "example": 1
                                        },
                                        "start_page": {
                                            "type": "interger",
                                            "example": 1
                                        },
                                        "end_page": {
                                            "type": "interger",
                                            "example": 15
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have entered this interval before"
                                        },
                                        "errors": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "You have entered this interval before"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Intervals"
                ],
                "summary": "Delete a single interval",
                "description": "Deletes an interval from the collection given its ID.",
                "operationId": "deleteInterval",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the interval to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Delete operation"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all Users",
                "description": "Retrieves a list of all users in the collection.",
                "operationId": "usersList",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of the rows per the page [ pagination ]",
                        "schema": {
                            "type": "integer",
                            "default": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "the desired page number [ pagination ]",
                        "schema": {
                            "type": "integer",
                            "default": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Ahmed Osama"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error."
                    }
                }
            }
        }
    }
}